SQL Practica 3

CREATE TABLE Cliente (
    idCliente INT PRIMARY KEY,
    nombre VARCHAR(50),
    apellido VARCHAR(50),
    DNI VARCHAR(15) UNIQUE,
    telefono VARCHAR(15),
    direccion VARCHAR(100)
);

-- Tabla Factura
CREATE TABLE Factura (
    nroTicket INT PRIMARY KEY,
    total DECIMAL(10, 2),
    fecha DATE,
    hora TIME,
    idCliente INT,
    FOREIGN KEY (idCliente) REFERENCES Cliente(idCliente)
);

-- Tabla Detalle
CREATE TABLE Detalle (
    nroTicket INT,
    idProducto INT,
    cantidad INT,
    preciounitario DECIMAL(10, 2),
    PRIMARY KEY (nroTicket, idProducto),
    FOREIGN KEY (nroTicket) REFERENCES Factura(nroTicket),
    FOREIGN KEY (idProducto) REFERENCES Producto(idProducto)
);

-- Tabla Producto
CREATE TABLE Producto (
    idProducto INT PRIMARY KEY,
    descripcion VARCHAR(100),
    precio DECIMAL(10, 2),
    nombreP VARCHAR(50),
    stock INT
);

-- Inserción de datos en la tabla Cliente
INSERT INTO Cliente (idCliente, nombre, apellido, DNI, telefono, direccion)
VALUES (1, 'Pedro', 'Pérez', '123456789', '555-1234', '123 Calle Principal'),
       (2, 'María', 'Gómez', '987654321', '555-5678', '456 Calle Secundaria');

-- Inserción de datos en la tabla Factura
INSERT INTO Factura (nroTicket, total, fecha, hora, idCliente)
VALUES (101, 100.50, '2017-10-28', '14:30:00', 1),
       (102, 75.25, '2019-10-28', '15:15:00', 2);

-- Inserción de datos en la tabla Detalle
INSERT INTO Detalle (nroTicket, idProducto, cantidad, preciounitario)
VALUES (101, 1, 2, 10.25),
       (101, 2, 1, 5.50),
       (101, 3, 1, 5.50),
       (102, 3, 3, 8.75);

-- Inserción de datos en la tabla Producto
INSERT INTO Producto (idProducto, descripcion, precio, nombreP, stock)
VALUES (1, 'Producto A', 12.50, 'ProductoX', 50),
       (2, 'Producto B', 8.75, 'ProductoY', 30),
       (3, 'Producto C', 6.99, 'ProductoZ', 60),
       (4, 'Producto D', 6.99, 'Producto0', 60);



1-
SELECT * 
FROM Cliente
WHERE nombre LIKE 'Pe%'
ORDER BY DNI

2-
SELECT C.nombre
FROM Cliente as C, Factura as F on (C.idCliente = F.idCliente)
WHERE (F.fecha > '2017-1-1') AND (F.fecha < '2017-12-31') AND C.idCliente not IN(
    SELECT F2.idCliente
    FROM Factura as F2
    WHERE (F2.fecha < '2017-1-1') or (F2.fecha > '2017-12-31')
)

3-
SELECT DISTINCT P.nombreP, P.descripcion, P.precio, P.stock
FROM Cliente as C, (Producto as P, (Factura as F, Detalle as D on (F.nroTicket = D.nroTicket)) on (P.idProducto = D.idProducto)) on (C.idCliente = F.idCliente)
WHERE (C.DNI = '45789456') and (P.idProducto not in (
    SELECT DISTINCT P.idProducto
    FROM Cliente as C, (Producto as P, (Factura as F, Detalle as D on (F.nroTicket = D.nroTicket)) on (P.idProducto = D.idProducto)) on (C.idCliente = F.idCliente)
    WHERE C.apellido = 'Garcia'
))

4-
SELECT DISTINCT P.nombreP, P.descripcion, P.precio, P.stock 
FROM Cliente as C, (Producto as P, (Factura as F, Detalle as D on (F.nroTicket = D.nroTicket)) on (P.idProducto = D.idProducto)) on (C.idCliente = F.idCliente)
WHERE (P.idProducto not in (
    SELECT DISTINCT P.idProducto
    FROM Cliente as C, (Producto as P, (Factura as F, Detalle as D on (F.nroTicket = D.nroTicket)) on (P.idProducto = D.idProducto)) on (C.idCliente = F.idCliente)
    WHERE C.telefono LIKE '221%'
))

5-
SELECT P.nombreP, P.descripcion, P.precio, COUNT(D.idProducto) as cantidad
FROM Producto as P
LEFT JOIN Detalle as D on (P.idProducto = D.idProducto)
GROUP BY P.idProducto
ORDER BY P.idProducto

6-

CREATE VIEW prod1 AS
    SELECT C.DNI
    FROM Cliente as C, (Producto as P, (Factura as F, Detalle as D on (F.nroTicket = D.nroTicket)) on (P.idProducto = D.idProducto)) on (C.idCliente = F.idCliente)
    WHERE P.nombreP = 'ProductoX';

CREATE VIEW prod2 AS 
    SELECT C.DNI
    FROM Cliente as C, (Producto as P, (Factura as F, Detalle as D on (F.nroTicket = D.nroTicket)) on (P.idProducto = D.idProducto)) on (C.idCliente = F.idCliente)
    WHERE P.nombreP = 'ProductoY';
    
SELECT C.nombre, C.apellido, C.DNI, C.direccion
FROM Cliente AS C, (prod1, prod2 on (prod1.DNI = prod2.DNI)) on (C.DNI = prod1.DNI)
WHERE C.DNI NOT IN (
    SELECT C.DNI
    FROM Cliente as C, (Producto as P, (Factura as F, Detalle as D on (F.nroTicket = D.nroTicket)) on (P.idProducto = D.idProducto)) on (C.idCliente = F.idCliente)
    WHERE P.nombreP = 'Producto0'
)

7-
SELECT F.nroTicket, F.total, F.fecha, F.hora, C.DNI
FROM Cliente AS C INNER JOIN Factura AS F ON C.idCliente = F.idCliente
WHERE EXISTS (
    SELECT 1
    FROM Detalle as D 
    INNER JOIN Producto as P on D.idProducto = P.idProducto
    WHERE D.nroTicket=F.nroTicket AND P.nombreP='ProductoX'
) OR (F.fecha >= '2019-1-1' and F.fecha <= '2019-12-31')






