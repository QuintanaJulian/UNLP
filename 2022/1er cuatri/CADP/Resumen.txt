procedure insertarAdelante (VAR pI: lista; datos: datos);
var
nuevo: lista;

begin
	new (nuevo); nuevo^.dato:= dato; nuevo^.sig:= nil;
	if (pI = nil) then
		pI:= nil;
	
		else beginn
			nuevo.sig:= pI.sig;
			pI:= nuevo;
			end; end;
---------------------------------------------------------------------------

procedure insertarAtras (VAR pI, pU: lista; dato: datos);
var
	nuevo: lista;
begin
	new (nuevo); nuevo^.dato:= dato; nuevo^.sig:= nil;

	if (pI = nil) then begin
		pI:= nuevo;
		pU:= nuevo;
		end
	else begin
	 	pU^.sig := nuevo;
		pU:= nuevo;
		end; end;
			
-----------------------------------------------------------------------------

procedure insertarOrdenado (var pI: lista; dato: datos);
var
	nuevo: lista;
	actual, ant: lista;
begin
	new (nuevo); nuevo^.dato:= dato; nuevo^.sig:= nil;
	actual:= pI; ant:= pI;
	while (actual <> nil) and (actual^.dato [< / >] dato) then begin
		ant:= actual;
		actual:= actual^.sig;
		end;
	
	if (pI:= actual) then begin
		nuevo^.sig:= pI;
		pI:= nuevo;
		end
	else begin
		nuevo^.sig:= ant^.sig;
		ant^.sig := nuevo;
		end; end;

-----------------------------------------------------------------------------


corte de control 
var
 i: integer;
begin
while (vector[i].user <> 0) and (vector[i].dato [< / >] dato)

-----------------------------------------------------------------------------
















