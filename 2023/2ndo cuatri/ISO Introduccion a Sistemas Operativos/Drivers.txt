Drivers

Son los encargados de mediar entre el SO y los dispositivos E/S
Deben respetar ciertas normas de cada SO, son como una api, tienen que responder a ciertas cosas.

Los driver suelen ser OS dependientes, estan basados para cierto OS. Pero hay drivers que otros OS pueden entender.
La unica diferencia entre los drivers de cada OS son las API

Operaciones de E/S
	read, write

Opcionales:
	llseek posiciona puntero de lectura / escritura
	flush vuelva los bufers al dispositivos
	poll pregunta si puede leer o escribir
	mmap mapea el dispositivo en memoria


HAL hardware abstraction level
Es un componente creado por el OS que trabaja con los drivers, esta estandarizado entre todas las distribuciones de OS.
Los drivers le pasa instrucciones a la HAL, y la HAL se encarga de tranformar a instrucciones bajo nivel
Permite portabilidad y compatibilidad, Hace que los drivers no tengan que especificar todas sus operaciones a bajo nivel.
De esta forma el SO implementa dicha operacion de la forma mas adecuada / conveniente


Maximixacion de performance:
Para esto se busca recucir la cantidad e context switches.
Reducir la cantidad de copias de datos mientras se pasan del dispositivo a la aplicacion.
Reducir la frecuencia de las interrupciones. Para esto se busca hacer transferencia con gran cantidad de datos, se utiliza controladores mas inteligentes y se utiliza pooling 



ARCHIVOS
Definicion:
	Entidad abstracta con nombre
	Ocupa un espacio logico continuo y direccionable
	Provee a los programas datos (entrada)
	Guarda datos de los programas (salidas)
	El programa en si es data que debe gurdarse

Sistemas de archivos (FAT, nfts, etc)
Son sistemas de hardware que permiten la abstraccion del usuario a la hora de acceder a un archivo

Sistemas de archivos transicionales (nfts, etc)
Son sistemas que buscan reducir / eliminar la posibilidad de perder o destruir datos, buscan garantizar la integridad del contenido

Atributos de archivos: